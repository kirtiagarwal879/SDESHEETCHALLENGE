/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    public ArrayList<Integer> solve(TreeNode root, int B) {
        ArrayList<Integer> ans=new ArrayList<>();
        if(root==null)
        {
            return ans;
        }
        
        if(root.val==B)
        {
            ans.add(root.val);
            return ans;
        }
        if(root.left!=null)
        {
            ArrayList<Integer> left=solve(root.left,B);
            if(left.size()!=0)
            {
                for(int i=0;i<left.size();i++)
                {
                    ans.add(left.get(i));
                }
                ans.add(0,root.val);
                return ans;
            }
        }
         if(root.right!=null)
        {
            ArrayList<Integer> left=solve(root.right,B);
            if(left.size()!=0)
            {
                for(int i=0;i<left.size();i++)
                {
                    ans.add(left.get(i));
                }
                ans.add(0,root.val);
                return ans;
            }
        }
        
        return ans;
    }
}
