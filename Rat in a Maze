// { Driver Code Starts
// Initial Template for Java

import java.util.*;
class Rat {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();

        while (t-- > 0) {
            int n = sc.nextInt();
            int[][] a = new int[n][n];
            for (int i = 0; i < n; i++)
                for (int j = 0; j < n; j++) a[i][j] = sc.nextInt();

            Solution obj = new Solution();
            ArrayList<String> res = obj.findPath(a, n);
            Collections.sort(res);
            if (res.size() > 0) {
                for (int i = 0; i < res.size(); i++)
                    System.out.print(res.get(i) + " ");
                System.out.println();
            } else {
                System.out.println(-1);
            }
        }
    }
}
// } Driver Code Ends


// User function Template for Java

// m is the given matrix and n is the order of matrix
class Solution {
    static ArrayList<String> ans;
    public static ArrayList<String> findPath(int[][] m, int n) {
        // Your code here
        
        ans=new ArrayList<>();
        boolean[][] visited=new boolean[m.length][m[0].length];
        path(m,0,0,visited,"");
        return ans;
    }
    public static void path(int[][] m,int i,int j,boolean[][] visited,String asf)
    {
        if(i<0 || i>=m.length || j<0 || j>=m[0].length || m[i][j]==0 || visited[i][j]==true){
            return;
        }
        if(i==m.length-1 && j==m[0].length-1)
        {
            ans.add(asf);
            return;
        }
        
        visited[i][j]=true;
        path(m,i+1,j,visited,asf+"D");
         path(m,i-1,j,visited,asf+"U");
         path(m,i,j+1,visited,asf+"R");
          path(m,i,j-1,visited,asf+"L");
          visited[i][j]=false;
        
    }
}
