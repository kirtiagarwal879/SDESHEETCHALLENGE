class Solution {
    public int coinChange(int[] coins, int amount) {
        int n=coins.length;
        int[][] dp=new int[n+1][amount+1];
        for(int i=0;i<=amount;i++)
        {
            if(i%coins[0]==0)
            {
                dp[0][i]=i/coins[0];
            }
            else
            {
                dp[0][i]=Integer.MAX_VALUE;
            }
        }
        
        
        for(int i=1;i<n;i++)
        {
            for(int j=0;j<amount+1;j++)
            {
                int notake=dp[i-1][j];
                int take=Integer.MAX_VALUE;
                if(coins[i]<=j)
                {
                    if(dp[i][j-coins[i]]==Integer.MAX_VALUE)
                    {
                        take=Integer.MAX_VALUE;
                    }
                    else
                    {
                        take=1+dp[i][j-coins[i]];
                    }
                  
                    
                }
                dp[i][j]=Math.min(take,notake);
            }
        }
        if(dp[n-1][amount]==Integer.MAX_VALUE)
        {
            return -1;
        }
        
        return dp[n-1][amount];
        
    }
}
