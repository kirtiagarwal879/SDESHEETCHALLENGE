import java.util.ArrayList;

public class Solution {

    public static boolean isGraphBirpatite(ArrayList<ArrayList<Integer>> edges) 
    {
        int n=edges.size();
        ArrayList<ArrayList<Integer>>  graph=new ArrayList<>();
        for(int i=0;i<n;i++)
        {
            graph.add(new ArrayList<>());
        }
        for(int i=0;i<edges.size();i++)
        {
            for(int j=0;j<edges.get(i).size();j++)
            {
                if(edges.get(i).get(j)==1)
                {
                    graph.get(i).add(j);
                    graph.get(j).add(i);
                }
            }
        }
       int[] color=new int[n];
       for(int i=0;i<n;i++)
       {
           if(color[i]==0 && helper(color,i,graph,1)==false)
           {
               return false;
           }
       }
        return true;
        
        
       
    }
    
    public static boolean helper(int[] color,int i,ArrayList<ArrayList<Integer>> edges,int c)
    {
        color[i]=c;
        for(int u:edges.get(i))
        {
           
                if(color[u]==-c)
                {
                    continue;
                }
                if(color[u]==c || helper(color,u,edges,-c)==false)
                {
                    return false;
                }
                
            
        }
        return true;
    }
}
