import java.util.*;
import java.io.*;

public class Solution {
   
	public static int[] KMostFrequent(int n, int k, int[] arr) {
		HashMap<Integer,Integer> map=new HashMap<>();
        PriorityQueue<Integer> pq=new PriorityQueue<>((a,b)->map.get(a)-map.get(b));
        for(int i=0;i<arr.length;i++)
        {
            if(map.containsKey(arr[i]))
            {
                int v=map.get(arr[i]);
                map.put(arr[i],v+1);
            }
            else
            {
                map.put(arr[i],1);
            }
        }
        
      for(Map.Entry<Integer,Integer> entry :map.entrySet()){
            pq.offer(entry.getKey());
            if(pq.size()>k)
                pq.poll();
        }
        int[] ans=new int[k];
        int u=k-1;
        while(pq.size()!=0 && u>=0)
        {
           
            ans[u]=pq.poll();
            u--;
        }
        return ans;
	}

}
