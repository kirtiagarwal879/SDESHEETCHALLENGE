/*************************************************************
    
    Following is the Binary Tree node structure:

    class BinaryTreeNode {

	int data;
	BinaryTreeNode left;
	BinaryTreeNode right;
	
	BinaryTreeNode(int data) {
		this.data = data;
		left = null;
		right = null;
	   }
    }

*************************************************************/
import java.util.*;
import java.io.*;
public class Solution {
	public static boolean pairSumBst(BinaryTreeNode A, int B) {
		// Write your code here.
        ArrayList<Integer> in=new ArrayList<>();
        helper(A,in);
        int i=0;
        int j=in.size()-1;
        while(i<j)
        {
            int sum=in.get(i)+in.get(j);
            if(sum==B)
            {
                return true;
            }
            else if(sum<B)
            {
                i++;
            }
            else if(sum>B)
            {
                j--;
            }
            
        }
        return false;
    }
    public static void helper(BinaryTreeNode A,ArrayList<Integer> ans)
    {
        if(A==null)
        {
            return;
        }
        helper(A.left,ans);
        ans.add((int)A.data);
        helper(A.right,ans);
	}
}

