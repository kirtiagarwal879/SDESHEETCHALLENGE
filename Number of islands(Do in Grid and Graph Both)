public class Solution 
{
    public static int getTotalIslands(int[][] mat) 
	{
        int count=0;
        boolean[][] visited=new boolean[mat.length][mat[0].length];
       for(int i=0;i<mat.length;i++)
       {
           for(int j=0;j<mat[0].length;j++)
           {
               if(visited[i][j]==false && mat[i][j]==1)
               {
                   dfs(mat,i,j,visited);
                   count++;
               }
           }
       }
        return count;
    }
    public static void dfs(int[][] mat,int i,int j,boolean[][] visited)
    {
        if(i<0 || j<0 || i>=mat.length || j>=mat[0].length || mat[i][j]==0 ||visited[i][j]==true)
        {
            return;
        }
        visited[i][j]=true;
        dfs(mat,i+1,j+1,visited);
        dfs(mat,i-1,j-1,visited);
        dfs(mat,i-1,j+1,visited);
        dfs(mat,i+1,j-1,visited);
        dfs(mat,i+1,j,visited);
        dfs(mat,i,j+1,visited);
        dfs(mat,i-1,j,visited);
        dfs(mat,i,j-1,visited);
    }
}
